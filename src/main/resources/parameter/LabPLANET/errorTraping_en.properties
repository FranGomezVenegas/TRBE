# To change this license header, choose License Headers in Project Properties.
# To change this template file, choose Tools | Templates
# and open the template in the editor.
app:LabPlanet
version:0.0.1

MissingMandatoryFields=Mandatory fields not found: <*1*> in procedure <*2*>.
MissingMandatoryParametersInRequest=Mandatory fields <*1*> not found in this request.
wrongAuditReasonPhrase=This reason, <*1*>, is not one of the options allowed: <*2*>.
SpecialFunctionReturnedERROR=Special Function Returned ERROR on running the method <*2*> for field <*1*>.
SpecialFunctionReturnedERROR=Special Function Returned ERROR <*1*> on running the method <*3*> for field <*2*>.
LPPlatform_SpecialFunctionReturnedEXCEPTION=Return exception.
LPPlatform_userNotAssignedToProcedure_detail=The user <*1*> is not declared for the procedure <*2*>. The user procedures are: <*3*>.
LPPlatform_userRoleActionEnabled_denied_rulesNotFound=The procedure <*1*> has no actions!
LPPlatform_eSignRequired_denied=ESIGN REQUIRED DENIED.
LPPlatform_eSignRequired_denied_detail=The action <*1*> is not part of the procedure <*2*>.
LPPlatform_userRoleActionEnabled_ALL=ACTION ENABLED FOR USER ROLE  BY CLAUSE ALL.
LPPlatform_userRoleActionEnabled_ALL_detail=In <*1*>. The action <*2*>  is enable by clause the clause ALL.
LPPlatform_userRoleActionEnabled_enabled=ACTION ENABLED FOR USER ROLE.
LPPlatform_userRoleActionEnabled_enabled_detail=In <*1*>. The action <*2*> is enabled.
LPPlatform_userRoleActionEnabled_missedParameter=ACTION FOR USER ROLE DISABLED BY MISSING PARAMETER.
LPPlatform_userRoleActionEnabled_missedParameter_detail=The rule called actionEnabled<*1*> was not found in the properties file and is required for the procedure <*2*>.
LPPlatform_userRoleActionEnabled_denied=ACTION NOT DECLARED FOR THIS PROCEDURE.
LPPlatform_userRoleActionEnabled_denied_detail=The action <*1*> is not declared in the rule procedureActions for the procedure <*2*>. The actions declared are <*3*>.
LPPlatform_userRoleActionEnabled_roleNotIncluded=ACTION FOR USER ROLE DISABLED BY ROLE NOT INCLUDED.
LPPlatform_userRoleActionEnabled_roleNotIncluded_detail=In  <*1*> and action  <*2*>, the user role  <*3*> is not part of the enabled ones:  <*4*>.
DataSample_FieldArraysDifferentSize=The values in FieldName are: <*1*> when  in FieldValue are: <*2*>.
DataSample_FieldsDuplicated=Detected any field duplicated in FieldName, the values are:
DataSample_MissingMandatoryFields=Mandatory fields not found: <*1*> in procedure <*2*>.
MissingConfigCode=The sample config code <*1*> in its version <*2*> was not found in the procedure <*3*>. Detail: <*4*>.
DataSample_MissingConfigCode=The sample config code <*1*> in its version <*2*> was not found in the procedure <*3*>. Detail: <*4*>.
DataSample_SpecialFunctionReturnedERROR=The field <*1*> is considered special and its checker ( <*2*> ) returned the Error:<*3*>.
DataSample_errorInsertingSampleRecord=ERROR:db error on inserting sample record.
DataSample_SampleNotFound=No record found for the sample <*1*> in procedure <*2*>.
DataSample_SampleAlreadyReceived=Sample <*1*> already received on <*2*>, cannot be received again.
DataSample_SamplingDateChangedSuccessfully=sampling date changed for sample <*1*> in <*2*>. Fields updated: <*3*>.
DataSample_SampleReceptionCommentAdd=Reception comment added for the sample <*1*> in <*2*>. Fields updated:<*3*>.
DataSample_SampleReceptionCommentRemoved=Reception comment deleted for the sample <*1*> in <*2*>. Fields updated:<*3*>.
DataSample_SampleIncubationStartedSuccessfully=Sample incubation started for the sample <*1*> in <*2*>. Fields updated:<*3*>.
DataSample_SampleIncubationEndedSuccessfully=Sample incubation ended  for the sample <*1*> in <*2*>. Fields updated:<*3*>.
DataSample_SampleIncubationEnded_NotStartedYet=Sample incubation cannot be ended prior to be started for the sample <*1*> in <*2*>.
DataSample_SampleAnalysisNotFound=No record found for the sample analysis <*1*> in procedure <*2*>.
DataSample_SampleAnalysisAssignment_SameAnalyst=The same analysis <*1*> cannot be reassigned to the sample analysis <*2*> in procedure <*3*>.
DataSample_SampleAnalysisAssignment_SampleAnalysisLocked=The current status is <*1*> for the test <*2*> therefore analyst assignment is not allowed for <*3*> in procedure <*4*>.
DataSample_SampleAnalysisAssignment_AssignmentModeNotRecognized=The analyst assignment mode in the sample rule <*1*> for the config code <*2*> in its version <*3*> is set to <*4*> and it is not one of the expected (<*5*>) in procedure <*6*> therefore the test <*7*> cannot be assigned to <*8*> in that moment.
DataSample_SampleAnalysisAssignment_AssignmentModeNotImplemented=<*1*> requires one of those modes (<*2*>) and user method certification is <*3> in procedure <*4*> .
DataSample_SampleAnalysisAssignment_EscapeByUnhandledException=You win! you found on particular case not covered by the logic for the Sample Analysis Assignment function on passing those parameters:procedurePrefix: <*1*>, userName: <*2*>, testId: <*3>, newAnalyst:: <*4*>, userRole: <*5*>.
DataSample_SampleAnalysisAssignment_Successfully=The test <*1*> was assigned properly to <*2*> in procedure <*3*>.
DataSample_SampleAnalysisAssignment_databaseReturnedError=Error returned error on trying to assign the sample analysis <*1*> was assigned properly to <*2*> in procedure <*3*>.
DataSample_sampleAnalaysisAddToSample_MissingMandatoryFields=Those fields are considered mandatory and are missing: <*1*>. All the mandatory fields are <*2*> in procedure <*3*>.
DataSample_SpecRuleNotFound=No Spec Rules record found for the spec code <*1*>  and version <*2*> in procedure <*3*>.
DataSample_SpecLimitNotFound=No Spec Limit found for the spec code <*1*>  and version <*2*> in procedure <*3*>.
DataSample_AnalysisMethodVariationNotFound=No Analysis Method Variation found for the criteria <*1*> in procedure <*5*>.
DataSample_AnalysisMethodParamsNotFound=Analysis Method Params Not Found for the criteria <*1*> in procedure <*2*>.
DataSample_SampleAnalysisAddedSuccessfully=The sample analysis <*1*> was added to the sample <*2*> in procedure <*3*>.
DataSample_SampleAnalysisResultNotFound=No Sample Analysis Result records found for the result <*1*>  in procedure <*3*>.
DataSample_SampleAnalysisResultLocked=The current result status is <*1*>  and it does not allow enter results for <*2*> in procedure <*3*>.
DataSample_SampleAnalysisResultSampleValue=The current result value for <*1*> in procedure <*2*> is already <*3*> and won't be re-entered.
DataSample_SampleRulesNotFound=For the config code <*1*> and version <*2*> no sample rules found in procedure <*3*>.
DataSample_SampleAnalysisRuleAnalystNotAssigned=The sample analysis <*1*> is not assigned yet and this is required as defined in sample_rules for template <*2*> and its version <*3*> in procedure <*4*>.
DataSample_SampleAnalysisRuleOtherAnalystEnterResult=The sample analysis <*1*> is assigned to the analyst <*2*>.Therefore the user <*3*> cannot enter results for this test in procedure <*4*>.
DataSample_SampleAnalysisResult_ConversionNotAllowed=The conversion mode at the spec level (set to <*1*>) to be expressed in <*2*> units does not allow this conversion to the units of measurement <*3*> for the limit id <*4*> in the procedure <*5*>.
DataSample_SampleAnalysisResult_ConverterFALSE=The result <*1*> can not be converted. Error: <*2*>. In procedure <*3*>.
DataSample_SampleAnalysisResult_QualitativeSpecNotRecognized=The result <*1*> can not be checked against those parameters <*2*> in procedure <*3*>.
DataSample_SampleAnalysisResult_QuantitativeSpecNotRecognized=The result <*1*> can not be checked against those parameters <*2*> in procedure <*3*>.
DataSampleAnalysisResult_ValueNotNumericForQuantitativeParam=The value <*1*> is not numeric when expected to be, the rule is <*2*> with limit id <*3*> for procedure <*4*>.
DataSample_SampleAnalysisResult_SpecRuleNotImplemented=The result <*1*> can not be checked against those parameters <*2*> in procedure <*3*>.
DataSample_SampleAnalysisResultNotRevewiable=The result <*1*> from procedure <*2*> has the status <*3*> then can not be reviewed.
DataSample_SampleNotReviewable=The sample <*1*> from procedure <*2*> has the status <*3*> then can not be reviewed.
DataSample_SampleCancelation_StatusNotExpected=The sample <*1*> has status set to <*2*> and cancelation is not allowed in procedure <*3*>.
DataSample_SampleAnalysisResultCancelation_StatusNotExpected=The result <*1*> has status set to <*2*> and cancelation is not allowed in procedure <*3*>.
DataSample_SampleAnalysisCancelation_StatusNotExpected=The test <*1*> has status set to <*2*> and cancelation is not allowed in procedure <*3*>.
DataSample_SampleUnCancel_StatusNotExpected=The current status is <*1*> and just <*2*> can be uncanceled. Actions applied in procedure <*3*>.
DataSample_sampleAliquoting_volumeAndUomMandatory=When the business rule '<*1*>' is Enable then Volume and UOM and mandatory but were not found in the arguments <*2*> for aliquoting the sample <*3*> in procedure <*4*>.
DataSample_sampleSubAliquoting_volumeAndUomMandatory=When the business rule '<*1*>' is Enable then Volume and UOM and mandatory but were not found in the arguments <*2*> for subaliquoting the aliquot <*3*> in procedure <*4*>.
DataSample_sampleAliquoting_notEnoughVolumeToAliquoting=The <*1*> has <*2*> volume for aliquoting what is not enough for <*3*> in procedure <*4*>.
DataSample_sampleAliquoting_notEnoughVolumeForExtraction=The extraction requires <*1*> volume for extraction what is not enough for the volume <*2*> in <*3*> in procedure <*4*>.
DataSample_sampleAliquoting_volumeCannotBeNegativeorZero=The volume, <*1*>. cannot be zero or negative for aliquoting <*2*> in procedure <*3*>.
LabPLANETArray_getColumnFromArray2D_ColNotFound=There are <*1*> column(s) in the array and col to get cannot be <*2*>.
LPPlatform_MissingTableConfigCode=The config object for <*1*> does not exist for the parameter <*2*> in the procedure <*3*>. Detail: <*4*>.
LPPlatform_SpecialFunctionReturnedERROR=The field <*1*> is considered special and its checker ( <*2*> ) returned the Error:<*3*> in procedure <*4*>.
LPPlatform_SpecialFunctionCausedException=The field <*1*> is considered special and its checker fall into the exception <*2*>, extra message: <*3*>.
LPPlatform_SpecialFunctionAllSuccess=None of the special fields (<*1*>) returned error therefore all is fine to proceed.
LPPlatform_Rdbms_NotFilterSpecified=Any filter is mandatory to run the query on <*1*> in procedure <*2*>.
LPPlatform_Rdbms_NoRecordsFound=No records founds in <*1*> by the filter <*2*> in procedure <*3*>.
Rdbms_dtSQLException=The database returned error: <*1*> Query: <*2*>.
existsRecord_RecordNotFound=The record <*1*> does not exist in table <*2*> in procedure <*3*>.
ConfigSpecRule_specLimits_ruleMandatoryArgumentNull=The rule is one mandatory field and cannot be null in <*1*>.
specLimits_textSpecMandatoryArgumentNull=The Text Spec is mandatory field for qualitative rules and cannot be null in <*1*>.
specLimits_separatorMandatoryArgumentNull=For the rule <*1*> the Separator is one mandatory field and cannot be null in procedure <*2*>.
specLimits_isOneOf_Successfully=This Text Spec has <*1*> entries.
specLimits_isNotOneOf_Successfully=This Text Spec has <*1*> entries.
specLimits_equalTo_Successfully=
specLimits_equalTo_Successfully=
specLimits_notEqualTo_Successfully=
specLimits_notEqualTo_Successfully=
specLimits_contains_Successfully=
specLimits_contains_Successfully=
specLimits_notContains_Successfully=
specLimits_notContains_Successfully=
specLimits_qualitativeRuleNotRecognized=The rule <*1*> is not recognized as one of the expected ones. The expected values are:<*2*>.
specLimits_quantitativeMinSpecMaxSpec_Successfully=Quantitative <*1*>-<*2*> range Success.
specLimits_MinSpecMinControlMaxSpec_minControlMandatory=Min Control cannot be null for a rule of Min Spec + Min Control + Max Spec.
specLimits_MinAndMaxSpecOneOfBothMandatory=Min and Max Spec values are null, both cannot be set to null.
specLimits_quantitativeMinSpec_Successfully=Quantitative MinSpec Success.
specLimits_quantitativeMaxSpecSuccessfully=Quantitative MaxSpec Success.
specLimits_quantitativeMinSpecMaxSpec_MinSpecGreaterOrEqualToMaxSpec=<*1*> is >= <*2*>.
specLimits_minControlGreaterOrEqualToMaxControl=Min Control is <*1*> and cannot be greater than or equal to Max Control that is <*2>.
specLimits_MinControlPresent_MinSpecMandatory=Min Control is <*1*> then Min Spec cannot be set to null.
specLimits_MaxControlPresent_MaxSpecMandatory=Max Control is <*1*> then Max Spec cannot be set to null.
specLimits_minControlGreaterOrEqualToMaxSpec=Min Control is <*1*> and cannot be greater than or equal to Max Spec that is <*2*>.
specLimits_MaxControlLessThanOrEqualToMinSpec=Max Control is <*1*> and cannot be less than or equal to Min Spec that is <*2*>.
specLimits_MinControlLessThanOrEqualToMinSpec=Min Control is <*1*> and cannot be lesser than or equal to the Min Spec value that is <*2*>.
specLimits_quantitativeMinSpecMinControlMaxSpec_Successfully=
specLimits_MaxControlGreaterThanOrEqualToMaxSpec=Max Control is <*1*> and cannot be greater than or equal to the Max Spec value that is <*2*>\n.
specLimits_quantitativeMinSpecMinControlMaxControlMaxSpec_Successfully=
specLimits_MinControlAndMaxControlOutOfLogicControl=For <*1*> (Min) and <*2*> (Max) pair control are out the logic control.
UnhandledExceptionInCode=You win, you found a way not controlled when the parameters are: <*1*>.
specRecord_AlreadyExists=The spec <*1*> sit its version <*2*> already exists in procedure <*3*> and cannot be duplicated.
specRecord_createdSuccessfully=The Spec <*1*> was created successfully in procedure <*2*>.
specVariationGetNamesList_successfully=<*1*>.
DataSpec_resultCheck_mandatoryFieldIsNull=The argument <*1*> is mandatory and cannot be set to null.
DataSpec_resultCheck_UnhandledException=You win, you found a way not controlled when the parameters are: <*1*>.
DataSpec_resultCheck_StrictDoesNotAllowPairOfSameValue=<*1*> and control cannot be the same (<*2*>) when <*3*>.
Sop_SopMetaData_recordNotCreated=SOP Meta Data Not Created for the criteria <*1*> in procedure <*2*>.
Sop_SopMetaData_recordNotUpdated=Field <*1*> cannot be updated to be set to <*2*> for the SOP Meta Data <*3*> in procedure <*4*>.
Sop_SopAlreadyExists=The SOP <*1*> already exists in procedure <*2*> cannot be created again.
SopList_SopAssignedToSopList=The SOP <*1*> was assigned to the SOP List <*2*> with success in procedure <*3>.
UserSop_sopAddedToUser=SOP <*1*> assigned to the user <*2*> in procedure <*3*>.
UserSop_sopAlreadyAssignToUser=SOP <*1*> already assigned to the user <*2*> cannot be assigned multiple times, in procedure <*3*>.
UserSop_UserWithNoRolesForThisGivenSchema=The user <*1*> has no roles assigned for working on procedure <*2*>.
UserSop_SopNotAssignedToThisUser=The SOP <*1*> is not assigned to the user <*2*> in procedure <*3*>.
UserSop_UserCertifiedForSop=The user <*1*> is certified for the SOP <*2*> in procedure <*3*>.
UserSop_sopMarkedAsCompletedNotPending=The Sop <*1*> is not pending of mark as completed for this user in procedure <*2*>.
UserSop_UserNotCertifiedForSop=The user <*1*> is NOT currently certified for the SOP <*2*> in procedure <*3*>. Reason:<*4*>.
UserSop_sopAlreadyAssignToUser=The SOP <*1*> is already assigned to the user <*2*> and cannot be reassigned in procedure <*3*>.
UnitsOfMeasurement_currentUnitsNotDefined=Conversion is not possible when current units is set to null, for procedure <*1*>. Arguments: <*2*>.
UnitsOfMeasurement_newUnitsNotDefined=Conversion is not possible when new units is set to null, for procedure <*1*>. Arguments: <*2*>.
UnitsOfMeasurement_sameValueNotConverted=Same units so nothing changed for procedure <*1*>. Arguments: <*2*>.
UnitsOfMeasurement_methodError_familyFieldNotAddedToTheQuery=The conversion is possible just for pairs belonging to the same family then family field, <*1*>, should be part of the query to check that both units belong to the same family. Now this query get those fields: <*2*> in procedure <*3*>, the arguments passed are: <*4*>.
UnitsOfMeasurement_UnitsNotBelongSameFamily=The current units is <*1*> and belongs to the family <*2*>, the new units is <*3*> and belongs to the family <*4*> in procedure <*5*>. Arguments: <*6*>.
UnitsOfMeasurement_convertedSuccesfully=From <*1*> to <*2*> the value <*3*> is converted to <*4*> in procedure <*5*>. Arguments <*6*>.
UnitsOfMeasurement_FamilyArgumentMandatory=Family argument cannot be set to null in procedure <*1*>.
ChainOfCustody_requestAlreadyInCourse=The object <*1*> of <*2*> type has one change of custody already in progress in procedure <*3*>.
ChainOfCustody_requestStarted=The process to change the custody for the object <*1*> of type <*2*> started in procedure <*3*>.
ChainOfCustody_requestCompleted=The process to change the custody for the object <*1*> of type <*2*> was <*4*> in procedure <*3*>.
ChainOfCustody_sameCustodian=The current custodian is <*1*> for the object <*2*> of type <*3*> cannot be transferred to the same custodian in procedure <*4*>.
ChainOfCustody_noCustodian=Custodian cannot be transferred to no candidate for the object <*2*> of type <*3*> in procedure <*4*>.
ChainOfCustody_noChangeInProgress=The object <*1*> of type <*2*> has no change of custody process started in this moment in procedure <*3*>.
ChainOfCustody_noCustodianCandidate=You are not the custodian candidate assigned to the object <*1*> of type <*2*> in procedure <*3*>.
UserProfile_personNameIsEmpty=The person name is empty and one value is expected.
STAGES_FUNCTIONALITY_NOT_ENABLE=Stages functionality is not enable for <*1*> in procedure <*2*>.
ConfigProgramCalendar_holidayCalendarEmpty=The calendar <*1*> is empty, will not be added to the program.
ConfigProgramCalendar_noDaysInRange=No dates in this range for. Day: <*1*> between <*2*> and <*3*>.
SampleAudit_sampleAuditRevisionMode_ParameterMissing=The parameter <*1*> was not found or has no ENABLE/DISABLE value for procedure <*2*>.
SampleAudit_sampleAuditRevisionMode_StagesDetectedButSampleStagesNotEnable=In business rule <*1*> the STAGES is present but SampleStages functionality is not enable for the process <*2*>, please review this procedure.
SampleAudit_currentSampleStageNotRequiresSampleAuditRevision=the current stage <*1*> for sample <*2*> is not one of the stages that requires sample revision, review business rule <*3*>, then this will not checked for this sample in procedure <*4*>.
SampleAudit_auditRecordsPendingRevision=For the sample <*1*> there are still pending audit records for revision in procedure <*2*>.
DataProgramProductionLot_productionLot_fieldNotFound=The field <*1*> does not exist on trying to create the lot <*2*>, fields and values passed are <*3*> and <*4*> in procedure <*5*>.
GenomaDataProject_newProjectMissingMandatoryFields=On trying to create the project <*1*> there are miissing mandatory fields, <*2*>, for the procedure <*3*>.
AppIncident_incidentAlreadyActive=The incident <*1*> is already active.
AppIncident_incidentCurrentlyNotActive=The incident <*1*> is currently not active so no changes are accepted.
incubatorAlreadyActive=The incubator <*1*> is already active in procedure <*2*>.
incubatorDoesnotExist=The incubator <*1*> does not exist in procedure <*2*>.
incubatorCurrentlyDeactive=The incubator <*1*> is currently not active in procedure <*2*>.
incubatorBatchExist=One incubator batch called <*1*> already exist in procedure <*2*>.
IncubatorBatchNotStartedYet=The batch <*1*> was not started yet for procedure <*2*>.
IncubatorBatchAlreadyStarted=The batch <*1*> was already started and cannot be started twice for procedure <*2*>.
IncubatorBatchAlreadyInProcess=The batch <*1*> is already in process for incubator <*2*> and start multiples batches per incubator is not allowed for the procedure <*3*>.
IncubatorBatchNotActiveToChangeItsContent=The batch <*1*> is not active therefore alter its content is not allowed.
IncubatorBatchStartedToChangeItsContent=The batch <*1*> already started therefore alter its content is not allowed.
sopMarkedAsCompletedNotPending=The SOP <*1*> for the user <*2*> is not pending to be completed for the procedure <*3*>.
auditRecordsPendingRevision=The sample <*1*> has pending sign audit records.
tableWithNoRecords=No records to show.
IncubatorNotebookNoReadingSinceLatestActivation=There are no readings logged for incubator <*1*> in its notebook for procedure <*2*>.
IncubatorNotebookNoReadingLoggedYet=The notebook for the incubator <*1*> has no readings logged for procedure <*2*>.
IncubatorBatchNotEmptyToRemove=The batch <*1*> is not empty and cannot be removed then.
incubatorBatchNotFound=One incubator batch called <*1*> does not exist in procedure <*2*>.
DataProgramCorrectiveAction_actionClosed=The action <*1*> is already closed, no action can be performed.
LPPlatform_userRoleActionEnabled_enabled=ACTION ENABLED FOR USER ROLE.
DataSpec_resultCheck_quantitativeOutMax=\ 
DataSpec_resultCheck_quantitativeOutMinStrict=Result Out by Min.
LPPlatform_userRoleActionEnabled_roleNotIncluded=ACTION NOT ENABLED FOR USER PROFILE.
LPPlatform_userRoleActionEnabled_missedParameter=In  <*1*>. The rule called actionEnabled <*2*> was not found in the properties file.
DataSpec_resultCheck_quantitativeOutMinStrict=<*1*> > <*2*>.
DataSpec_resultCheck_quantitativeOutMin=<*1*> <= <*2*>.
DataSpec_resultCheck_quantitativeOutMaxStrict=\ 
DataSpec_resultCheck_quantitativeOutMax=\ 
LPPlatform_userRoleActionEnabled_ALL=In <*1*>. The action <*2*>  is enable by the clause ALL.
sopMarkedAsCompletedNotPendingUserSop_sopMarkedAsCompletedNotPending=The Sop <*1*> is not pending of mark as completed for this user in procedure <*2*>.
LPPlatform_userRoleActionEnabled_enabled=In <*1*>. The action <*2*> is enabled.
LPPlatform_userRoleActionEnabled_missedParameter=ACTION FOR USER ROLE DISABLED BY MISSING PARAMETER.
LPPlatform_userRoleActionEnabled_roleNotIncluded=In  <*1*> and action  <*2*>, the user role  <*3*> is not part of the enabled ones:  <*4*>.
AuditRecordAlreadyReviewed=-This audit record was signed previously therefore cannot be signed.
lotHasNotReviewedSampleAnalysis=-The lot <*1*> has still not reviewed samples in procedure <*2*>.
LPPlatform_DataSampleAnalysisResult_SampleAnalysisResultLocked=The current status, <*1*>, for the result number <*2*> does not allow to enter results for procedure <*3*>, please contact your Admin.
LPPlatform_verifyUserRequired_denied=The action <*1*> not declared in procedure <*2*>.
AnalysisMethodCertif_isUserCertificationEnabledNotEnabled=The user certification is not enabled for procedure <*1*>.
sampleAuditRevisionMode_Disable=The sample audit revision is disabled for procedure <*2*>.
allSamplesInBatchSetAsBatchEnded=All sample set as incubation ended.
allSamplesInBatchSetAsBatchStarted=All sample set as incubation started.
batchTypeNotRecognized=The batch type <*1*> is not one of the recognized ones.
autoSampleAnalysisAdd_caseNotDetected=autoSampleAnalysisAdd_caseNotDetected.
SampleIncubatorModeBusinessRuleNotDefined=sampleIncubatorMode Business Rule not defined for <*1*>.
SampleIncubatorModeValueNotRrecognized=sampleIncubatorMode <*1*> not recognized as one of the expected values.
DataSampleRevision_NoPendingTestingGroupRevision=No testing group revision pending for sample <*1*> in procedure <*2*>.
DataSampleRevision_PendingTestingGroupRevision=There are pending testing group, <*1*>, for the sample <*2*> in procedure <*3*>.
DataSampleRevision_alreadyReadyForRevision=Already ready for revision.
DataSampleRevision_readyForRevision=Ready for revision.
DataSampleRevision_notReadyForRevision=Not ready for revision.
DataSampleRevision_PendingResultsInTestingGroup=There are pending results for the testing group <*1*> for the sample <*2*> in procedure <*3*>.
actionHasNoSampleIdTestIdResultIdLinked=The action <*1*> has no sampleId, testId or resultId linked with so this method returns true doing nothing
incubatorBatchNotActive=The batch <*1*> is not active.
LabPLANETPlatform_SpecialFunctionReturnedEXCEPTION=Return exception.
TemperatureReadingDayIsNotToday=The temperature reading day is <*1*> and is not from today as set for procedure <*2*>

RecordNotCreated=Record not created. Query: <*2*>; Values: <*3*>; Procedure <*4*>
actionNotDeclaredToPerformAutoMoveToNext=The action <*1*> is not declared as to perform auto move to next in procedure <*2*>
LpPlatform_ruleNameValue=<*1*> = <*2*>
LpPlatform_BusinessRulesampleTestingByGroup_ReviewByTestingGroupNotFound=sampleTestingByGroup_ReviewByTestingGroup not found or not define
incubationStageNotRecognized=The Incubation stage should be set to 1 or 2
ValueNotNumeric=There are expected numeric values not being numeric, <*1*>